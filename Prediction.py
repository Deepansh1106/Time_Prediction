# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1N9_UlpEfxjmaibpQqx2p_dCOSHDCyIYD
"""

# Function to get input from the user
#def get_user_input():
#   age = float(input("Enter Age of Delivery Partner: "))
#    distance = float(input("Enter Total Distance (in km): "))
#    return np.array([[age, distance]])
import pickle
import numpy as np
with open('delivery_time_model.pkl', 'rb') as f:
    model = pickle.load(f)

print("âœ… Model loaded successfully.")

def month_end_day(date):
    from calendar import monthrange
    return monthrange(date.year, date.month)[1]

def get_user_input():
    # Numerical inputs
    age = float(input("Enter Age of Delivery Partner: "))
    rating = float(input("Enter Delivery Partner's Average Rating (e.g., 4.5): "))
    distance = float(input("Enter Total Distance (in km): "))

    festival = input("Is there a Festival? (Yes/No): ").strip().lower()
    weather = input("Enter Weather Condition (Sunny/Stormy/Cloudy/Fog/Windy): ").strip().capitalize()
    date_str = input("Enter Delivery Date (YYYY-MM-DD): ")
    delivery_date = datetime.strptime(date_str, "%Y-%m-%d")

    input_array = np.zeros((1, 17))  # 17 features
    input_array[0, 0] = age
    input_array[0, 1] = rating
    input_array[0, 4] = distance
    input_array[0, 2] = 1 if festival == "yes" else 0

    weather_map = {'Sunny': 0, 'Stormy': 1, 'Cloudy': 2, 'Fog': 3, 'Windy': 4}
    input_array[0, 3] = weather_map.get(weather, 0)

    input_array[0, 5] = delivery_date.day
    input_array[0, 6] = delivery_date.month
    input_array[0, 7] = (delivery_date.month - 1) // 3 + 1
    input_array[0, 8] = delivery_date.year
    input_array[0, 9] = delivery_date.weekday()
    input_array[0, 10] = 1 if delivery_date.day == 1 else 0
    input_array[0, 11] = 1 if delivery_date.day == month_end_day(delivery_date) else 0
    input_array[0, 12] = 1 if delivery_date.month in [1, 4, 7, 10] and delivery_date.day == 1 else 0
    input_array[0, 13] = 1 if delivery_date.month in [3, 6, 9, 12] and delivery_date.day == month_end_day(delivery_date) else 0
    input_array[0, 14] = 1 if delivery_date.month == 1 and delivery_date.day == 1 else 0
    input_array[0, 15] = 1 if delivery_date.month == 12 and delivery_date.day == 31 else 0
    input_array[0, 16] = 1 if delivery_date.weekday() >= 5 else 0

    return input_array



features = get_user_input()
predicted = model.predict(features)
print("\nğŸ“¦ Predicted Delivery Time (in Minutes):", round(predicted[0], 2))
